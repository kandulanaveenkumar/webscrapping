# -*- coding: utf-8 -*-
"""698ind.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OC16Rd3vntckmyqOhzUz5qqVy3PANq-C
"""

import pandas as pd
from datetime import datetime
import hashlib
import json
import csv
last_updated_string = datetime.now().strftime("%Y-%m-%dT%H:%M:%S")

def alias_name(name):
    alias_list=[]
    rearrangedNamelist=name.split(' ')
    lastname= rearrangedNamelist.pop(0)
    rearrangedNamelist=rearrangedNamelist + [lastname]
    alias_list.append(' '.join(rearrangedNamelist))
    return alias_list 

mylist= []
file = open("/content/person.csv")
csvreader = csv.reader(file)

for row in csvreader:
  d = {
            "uid": "",
                    "name": "",
                    "alias_name": [],
                    "country": [],
                    "list_type": "Individual",
                    "last_updated": last_updated_string,
                    "list_id": "UKR_S10049",
                    "individual_details": {
                    "date_of_birth": [],
                    "place_of_birth":[]
                    },
                    "designation":[],
                    "nns_status": "False",
                    "address": [
                    {
                    "country": "",
                    "complete_address": ""
                    }
                    ],
                    "sanction_details": {},
                    "documents": {
                    },
                    "comment": "",
                    "sanction_list": {
                    "sl_authority": "National Agency on Corruption Prevention, Ministry of Foreign Affairs, Ukraine",
                    "sl_url": "https://sanctions.nazk.gov.ua/en/sanction-person/",
                    "watch_list": "European Watchlists",
                    "sl_host_country": "Ukraine",
                    "sl_type": "Sanctions",
                    "sl_source": "Ministry of Foreign Affairs, National Agency on Corruption Prevention Sanctions List, Ukraine",
                    "sl_description": "List of individuals and entities sanctioned by National Agency on Corruption Prevention, Ministry of Foreign Affairs, Ukraine"

                    }
        }
  try:
        first_name = row[1]
        #print(first_name)
        alias1 = row[2]
        alias2 = row[3]
        #print(alias)
        if first_name!="":
          if "/" in first_name:
            first_name = first_name.split("/")[-1].strip()
          # if not isEnglish(first_name):
          #   first_name = unidecode(first_name)
          nams = alias_name(first_name)

          original = " ".join(nams)

          d["name"]= original
          
          d["alias_name"] = [row[1]] + [alias1] + [alias2]

  except:
        pass

  try:
      cou = row[4]
      #print(cou)
      if cou!="":
        d["country"].append(cou)
  
  except:
    pass

  try:
       desg = row[8]
       #print(desg)
       if desg!=0:
         d["designation"].append(desg)
  except:
       pass
  try:
        dob = row[23]
        #print(dob)
        if dob!="":
          d["individual_details"]["date_of_birth"].append(dob)
  except:
        pass

  try:
        city = row[26]
        if city!="":
          d["individual_details"]["place_of_birth"].append(city)
  
  except:
        pass

  try:
        com = row[11]
        if com!="":
          d["comment"] = com
  except:
    pass
  # try:
  #       coun = row[9]
  #       if coun!="":
  #         d["country"].append(coun)
  
  # except:
  #         pass


  # try:
  #       urls1=row[21]
  #       urls2=row[22]
  #       urls3=row[23]
  #       all_urls = urls1+" "+urls2+" "+urls3
  #       print(all_urls)
  #       if all_urls!="":
  #         d["sanction_list"]["other_urls"].append(all_urls)

  # except:
  #           pass
  # try:
  #   pen = row[5]
  #   if pen!="":
  #     d["sanction_details"]["penalty_amount"]=pen
  # except:
  #   pass

  # try:
  #   dates = row[6]
  #   if dates!="":
  #     d["sanction_details"]["date_decision"]=dates

  # except:
  #   pass

  try:
        d["uid"] = hashlib.sha256(
            ((d["name"] + d["sanction_list"]["sl_source"]+d["sanction_list"]["sl_host_country"]).lower()).encode()).hexdigest()
  except:
        pass

  try:
        if d["name"]!="":
          mylist.append(d)
          print("k")

  except:
        pass

with open('w1.json', 'w', encoding="utf-8") as file:
   json.dump(mylist, file, ensure_ascii=False, indent=4)